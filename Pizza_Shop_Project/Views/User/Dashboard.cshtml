@model DAL.ViewModels.DashboardViewModel;

@{
    ViewData["Title"] = "Dashboard Page";
    Layout = "_Layout";
}

<style>
    .dashboard-icon {
        width: 40px;
        height: 40px;
        border-radius: 100%;
    }

    .dashboard-icon-outer {
        width: 60px;
        height: 60px;
        padding: 10px;
    }

    .cursor-pointer {
        cursor: pointer;
    }
</style>

<div class="body_content">

    <div class="d-md-flex justify-content-between pt-3">
        <div class="user-text fs-3 fw-bold">Dashboard</div>
        <div class="form-floating pt-3 pt-md-0 w-auto">
            <select id="selectRange" class="form-select p-2"
                style="height:45px !important; border-radius: 7px !important;">
                <option value="Today">Today</option>
                <option value="Last 7 days">Last 7 days</option>
                <option value="Last 30 days">Last 30 days</option>
                <option value="Current Month">Current Month</option>
                <option value="Custom Date">Custom Date</option>
            </select>
        </div>
    </div>

    <div id="Dashboard-Content">

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    var range = "Today";
    var startDate = "";
    var endDate = "";
    var Labels = Array.from({ length: 31 }, (_, i) => i + 1);
    var RevenueGrowthData;
    var CustomerCountData;

    $('#selectRange').on('change', function () {
        range = $(this).val();
        if (range == "Custom Date") {

        } else {
            startDate = "";
            endDate = "";
            fetchDashboardData();
        }
    });

    // Function to fetch and display the Dashboard content
    function fetchDashboardData() {

        range = $("#selectRange").val();

        if (range == "Current Month") {
            Labels = Array.from({ length: 31 }, (_, i) => i + 1)
        }
        else if (range == "Last 7 days") {
            Labels = []
            for (i = 6; i >= 0; i--) {
                Labels.push(new Date(new Date().getTime() - i * 24 * 60 * 60 * 1000).getDate())
            }
        } else if (range == "Last 30 days") {
            Labels = []
            for (i = 29; i >= 0; i--) {
                Labels.push(new Date(new Date().getTime() - i * 24 * 60 * 60 * 1000).getDate())
            }
        }
        else if (range == "Today") {
            Labels = []
            for (i = 0; i <= 23; i++) {
                Labels.push(`${i}:00`)
            }
        }
        else {
            Labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
        }

        $.ajax({
            url: "/User/GetDashboardDetails",
            type: 'GET',
            data: { range, startDate, endDate },
            success: function (data) {
                $('#Dashboard-Content').html(data);
                ChangeGraphData(range, startDate, endDate);
                setTimeout((x) => {
                    ShowGraphs();
                }, 300)
            },
            error: function (xhr, status, error) {
                console.error("Error fetching dashboard content:", error);
            }
        });
    }

    function ShowGraphs() {
        var ctx = document.getElementById("RevenueChart").getContext("2d");

        // Revenue chart
        RevenueChart = new Chart(ctx, {
            type: "line", // Line chart type
            data: {
                labels: Labels, // Generate numbers from 1 to 31
                datasets: [{
                    label: "Revenue (â‚¹)",
                    data: RevenueGrowthData, // Random data for each day
                    backgroundColor: "rgba(75, 192, 192, 0.2)", // Light fill color
                    borderColor: "rgba(75, 192, 192, 1)", // Line color
                    borderWidth: 2,
                    fill: true, // Fill area under line
                    tension: 0.3 // Smooth curve effect
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        title: {
                            display: true,
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                        }
                    }
                }
            }
        });

        var ctx2 = document.getElementById("customerGrowthChart").getContext("2d");

        // Customer chart
        CustomerChart = new Chart(ctx2, {
            type: "line",
            data: {
                labels: Labels,
                datasets: [{
                    label: "Customer Growth",
                    data: CustomerCountData,
                    backgroundColor: "rgba(54, 162, 235, 0.2)",
                    borderColor: "rgba(54, 162, 235, 1)",
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        title: {
                            display: true,
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                        }
                    }
                }
            }
        });


    }

    function ChangeGraphData(range, startDate, endDate) {
        if (range == "Custom Date") {
            if (startDate == "" || endDate == "") {
                Labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
            }
            else {
                var StartDateList = startDate.split("-")
                var EndDateList = endDate.split("-")
                if (StartDateList[1] == EndDateList[1]) {
                    Labels = Array.from({ length: 31 }, (_, i) => i + 1)
                }
                else {
                    var DemoLabels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                    Labels = []
                    for (i = parseInt(StartDateList[1]) - 1; i <= parseInt(EndDateList[1]) - 1; i++) {
                        Labels.push(DemoLabels[i])
                    }
                }
            }
        }
        $.ajax({
            url: "/User/GetRevenueAndCustomer",
            type: "GET",
            data: { range: range, startDate: startDate, endDate: endDate },
            success: function (response) {
                RevenueGrowthData = response.revenueList
                CustomerCountData = response.customerList
            }
        })
    }

    $(document).ready(function () {
        fetchDashboardData();
    })

</script>