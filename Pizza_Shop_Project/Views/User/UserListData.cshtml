@using DAL.ViewModels
@using Microsoft.AspNetCore.Authorization
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService;

@model PaginationViewModel<User>
@{
  ViewData["Title"] = "UserListData Page";
  Layout = "_Layout";
}

<!-- user list -->
<div class="user-list-main-div  d-flex justify-content-between pt-2 pe-4">
  <!-- user txt -->
  <div class="user-div d-flex col-md-3">
    <div class="user-text user-text bg-light fs-3 pt-3 fw-bold  pb-3 ps-md-3">Users</div>
  </div>

  <!-- search add user -->
  <div class="search-adduser-div d-flex align-items-center justify-content-between pt-2 gap-2">
    <div class="search-button">
      <input type="text" id="searchbtn" placeholder="Search" class="p-1 border w-100">
      <i class="fa-solid fa-magnifying-glass search-icon-style"></i>
    </div>
    @if ((await AuthorizationService.AuthorizeAsync(User, "Users.AddEdit")).Succeeded)
    {
      <div class="add-user-button">
        <a asp-action="AddUser" asp-controller="User" class="btn solid-btn text-light p-2 me-2 border text">+ <span
            class="d-none d-md-block ps-1">Add
            User</span></a>
      </div>
    }


  </div>
</div>

<!-- Table -->
<div class="container">
  <div class="table-main-div table-responsive p-3 bg-white ms-md-3 me-0 shadow-lg">
    <table id="table" class="table">
      <thead>
        <tr class="border border-top-0 border-end-0 border-start-0 border-dark">
          <th class="fw-bold text-start text-nowrap pt-1">Name <i class="bi bi-arrow-down-up ps-1 " id="sortable-name"
              data-column="Name" data-direction="asc"></i></th>
          <th class="fw-bold text-start">Email</th>
          <th class="fw-bold text-start">Phone</th>
          <th class="fw-bold text-start text-nowrap pt-1">Role<i class="bi bi-arrow-down-up ps-2 " id="sortable-role"
              data-column="Role" data-direction="asc"></i></th>
          <th class="fw-bold text-start">Status</th>
          @if ((await AuthorizationService.AuthorizeAsync(User, "Users.AddEdit")).Succeeded)
          {
            <th class="fw-bold text-start">Action </th>
          }
        </tr>
      </thead>
      <tbody id="userTableBody">
        @await Html.PartialAsync("_UserListDataPartial", Model)
      </tbody>
    </table>

    @* Pagination div *@
    <div class="pagination-main-div d-flex justify-content-end gap-2 p-3 pt-0 bg-white ps-3 pe-2">

      <span class="pt-2">Items Per page:</span>

      <select id="itemselect">
        <option value="5">5</option>
        <option value="10">10</option>
        <option value="15">15</option>
      </select>

      <span class=" pt-2 ps-1" id="pagination-info"></span>
      <button id="left-arrow" class="btn border border-dark bg-light ps-2">&lt;</button>
      <button id="right-arrow" class="btn border border-dark bg-light ps-2">&gt;</button>
    </div>
  </div>
</div>

<!-- Delete item modal-->
<div id="delete-user" class="modal fade" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title fw-bold text-secondary">Delete Conformation</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body ">
        <div class="d-flex justify-content-center"><img src="../images/toppng.com-warning-icon-2400x2400.png"
            style="width: 30px;" alt=""></div>
        <p class="fw-bold text-secondary text-center pt-3 pb-3">Are you sure you want to delete this user ?</p>
        <form method="post" asp-action="DeleteUser" asp-controller="User">
          <input type="hidden" id="deleteEmail" name="Email" />
          @* <input type="hidden" id="deleteUserByRole" name="role"/> *@

          <div class="modal-footer d-flex justify-content-center">
            <button type="submit" class="btn solid-btn">Yes</button>
            <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
          </div>
        </form>

      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  @* Delete Modal Script *@
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var deleteModal = document.getElementById('delete-user');
      deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var email = button.getAttribute('data-email');
        @* var role = button.getAttribute('data-role'); *@
        var deleteEmailInput = document.getElementById('deleteEmail');
        @* var deleteUserByRoleInput = document.getElementById('deleteUserByRole'); *@
        deleteEmailInput.value = email;
        @* deleteUserByRoleInput.value = role; *@
      });
    });
  </script>

  @* PaginatedData *@
  <script>
    $(document).ready(function () {
      let currentPage = 1;
      let pageSize = $("#itemselect").val();
      let searchText = "";
      let sortColumn = "";
      let sortDirection = "asc"

      function loadTable(page = 1, search = "", sortColumn = "Name", sortDirection = "asc", pageSize = 5) {
        $.ajax({
          url: "/User/PaginatedData",
          type: "GET",
          data: { search, sortColumn, sortDirection, pageNumber: page, pageSize },
          success: function (data) {

            $("#userTableBody").html(data);
            currentPage = page;
            pageSize = parseInt(pageSize);

            var totalRecords = parseInt($("#totalRecordsHidden").val()) || 0;

            var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;

            var endItem = Math.min(currentPage * pageSize, totalRecords);

            $("#pagination-info").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
            $("#left-arrow").prop("disabled", currentPage === 1);
            $("#right-arrow").prop("disabled", currentPage * pageSize >= totalRecords);
          }
        });
      }

      // Search on keyup
      $("#searchbtn").on("keyup", function () {
        searchText = $(this).val().trim();
        currentPage = 1;
        loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize);
      });

      // Sorting functionality
      $("#sortable-name").on("click", function () {
        sortColumn = $(this).data("column");
        console.log(sortColumn);
        sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
        $(this).attr("data-direction", sortDirection);
        loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize);
      });

      $("#sortable-role").on("click", function () {
        sortColumn = $(this).data("column");
        console.log(sortColumn);
        sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
        $(this).attr("data-direction", sortDirection);
        loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize);
      });

      $("#right-arrow").on("click", function () {
        let rightarrow = !$(this).prop("disabled");
        if (rightarrow) {
          currentPage++;
          loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize);
        }
      });

      $("#left-arrow").on("click", function () {
        let leftarrow = !$(this).prop("disabled");
        if (leftarrow) {
          currentPage--;
          loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize);
        }
      });

      $("#itemselect").on("change", function () {
        pageSize = $(this).val();
        console.log("items-" + pageSize);
        currentPage = 1;
        loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize);
      });

      // Initial table load
      loadTable();
    });
  </script>

}