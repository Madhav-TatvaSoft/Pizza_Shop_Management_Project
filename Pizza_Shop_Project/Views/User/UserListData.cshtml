@model IEnumerable<DAL.Models.User>
@{
  ViewData["Title"] = "UserListData Page";
  Layout = "_Layout";
}


<!-- user list -->
<div class="user-list-main-div  d-flex justify-content-between mt-2">
  <!-- user txt -->
  <div class="user-div d-flex col-md-3">
    <div class="user-text fs-2 fw-bold ">Users</div>
  </div>

  <!-- search add user -->
  <div class="search-adduser-div d-flex align-items-center justify-content-between mt-2">
    <div class="search-button ">
      <input type="text" id="searchbtn" placeholder="Search" class="p-1 border ">
      <i class="fa-solid fa-magnifying-glass search-icon-style "></i>
    </div>
    <div class="add-user-button">
      <a asp-action="AddUser" asp-controller="User" class="btn solid-btn text-light p-2 ms-3 border text">+ Add
        User</a>
    </div>

  </div>
</div>

<!-- table -->
<div class="container">
  <div class="table-main-div table-responsive p-3 m-3 mb-0 bg-white mt-3 shadow-lg">
    <table id="table" class="table">
      <thead>
        <tr class="border border-top-0 border-end-0 border-start-0 border-dark">
          <th scope="col" class="fw-bold text-start text-nowrap">Name <i class="bi bi-arrow-down-up"></i></th>
          <th scope="col" class="fw-bold text-start">Email</th>
          <th scope="col" class="fw-bold text-start">Phone</th>
          <th scope="col" class="fw-bold text-start text-nowrap">Role<i class="bi bi-arrow-down-up"></i></th>
          <th scope="col" class="fw-bold text-start">Status</th>
          <th scope="col" class="fw-bold text-start">Action </th>
        </tr>
      </thead>
      <tbody>
        @* @foreach (var item in Model)
        {
        if (!item.Isdelete)
        {
        <tr class="border border-top-0 border-end-0 border-start-0 border-teritory">
        <td class="text-start text-nowrap"><img src="@item.ProfileImage" class="img-fluid me-1 " width="25px"
        alt="" />
        @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td class="text-start">
        @Html.DisplayFor(modelItem => item.Userlogin.Email)
        </td>
        <td class="text-start">
        @Html.DisplayFor(modelItem => item.Phone)
        </td>
        <td class="text-start">
        @Html.DisplayFor(modelItem => item.Userlogin.Role.RoleName)
        </td>
        <td class="text-start">
        @if (item.Status == true)
        {
        <div class="text-center text-white bg-success rounded-pill w-75 fs-6 p-md-1 p-2">
        Active</div>
        }
        else
        {
        <div class="text-center text-white bg-danger rounded-pill w-75 fs-6 p-md-1 p-2">
        Inactive</div>
        }

        </td>
        <td class="text-start">
        <a asp-action="EditUser" asp-controller="User" asp-route-Email="@item.Userlogin.Email" class="text-dark"><i
        class="fa-solid fa-pen w-25 me-sm-2 me-xs-2 me-lg-0 "></i></a>
        <i class="fa-solid fa-trash-can" data-bs-toggle="modal" data-bs-target="#delete-user"
        data-email="@item.Userlogin.Email"></i>
        </td>
        </tr>
        }

        } *@
      </tbody>
    </table>
  </div>




  <div class="pagination-main-div d-flex justify-content-end gap-2 p-3 pt-0 bg-white ms-3 me-2">

    <span class="mt-2 fw-bold text-secondary">Items Per page:</span>
    @* <select id="PageSize" onchange="pageSizeChange(1)">
    <option value="5" selected=@(ViewBag.PageSize == 5)>5</option>
    <option value="10" selected=@(ViewBag.PageSize == 10)>10</option>
    <option value="15" selected=@(ViewBag.PageSize == 15)>15</option>
    <option value="20" selected=@(ViewBag.PageSize == 20)>20</option>
    </select> *@

    <select id="itemselect" class="itemselect">
      <option value="5">5</option>
      <option value="10">10</option>
      <option value="15">15</option>
    </select>

    @* <span class="mt-2 fw-bold text-secondary">Showing @(((ViewBag.PageNo - 1) * ViewBag.PageSize) + 1) -
    @((ViewBag.PageNo * ViewBag.PageSize > ViewBag.TotalRecord ? ViewBag.TotalRecord : ViewBag.PageNo *
    ViewBag.PageSize))
    of @ViewBag.TotalRecord </span>
    <i class="fa-solid fa-angle-left btn border border-dark bg-light ms-2 d-flex align-content-center"
    onclick="changePage(@(ViewBag.PageNo - 1))" @(ViewBag.PageNo == 1 ? "disabled" : "")></i>
    <i class="fa-solid fa-angle-right btn border border-dark bg-light ms-2 " onclick="changePage(@(ViewBag.PageNo + 1))"
    @(ViewBag.PageNo * ViewBag.PageSize >= ViewBag.TotalRecord ? "disabled" : "")></i> *@
    <span class="pagination-info mt-2"></span>
    <button id="left-arrow" class="btn border border-dark bg-light ms-2" disabled>&lt;</button>
    <button id="right-arrow" class="btn border border-dark bg-light ms-2">&gt;</button>
  </div>
</div>



<!-- delete item modal-->
<div id="delete-user" class="modal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title fw-bold text-secondary">Delete Conformation</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body ">
        <div class="d-flex justify-content-center"><img src="../images/toppng.com-warning-icon-2400x2400.png"
            style="width: 30px;" alt=""></div>
        <p class="fw-bold text-secondary text-center">Are you sure you want to delete this user ?</p>
        <form method="post" asp-action="DeleteUser" asp-controller="User">
          <input type="hidden" id="deleteEmail" name="Email" />

          <div class="modal-footer d-flex justify-content-center">
            <button type="submit" class="btn solid-btn">Yes</button>
            <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
          </div>
        </form>

      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


  @* Modal Script *@
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var deleteModal = document.getElementById('delete-user');
      deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var email = button.getAttribute('data-email');
        var deleteEmailInput = document.getElementById('deleteEmail');
        deleteEmailInput.value = email;
      });
    });
  </script>

  @* Toaster script *@
  <script>
    $(document).ready(function () {
      var successMessage = '@TempData["SuccessMessage"]';
      var errorMessage = '@TempData["ErrorMessage"]';
      console.log("successMessage", successMessage);
      if (successMessage) {
        toastr.success(successMessage);
      }
      if (errorMessage) {
        toastr.error(errorMessage);
      }
    });
  </script>

  @* Pagination Main script *@

  <script>
    $(document).ready(function () {
      let currentPage = 1;
      let itemsPerPage = 5;
      let searchTerm = "";

      // Fetch users from the backend
      function fetchUsers() {
        $.ajax({
          url: "/User/UserListData",
          type: "GET",
          data: { searchTerm: searchTerm, pageNumber: currentPage, pageSize: itemsPerPage },
          success: function (response) {
            renderTable(response.Users);
            updatePagination(response.TotalRecords);
          }
        });
      }

      // Render the table
      function renderTable(users) {
        let tbody = $("#table tbody");
        tbody.empty();

        $.each(users, function (index, user) {
          let statusBadge = user.status
            ? '<div class="text-center text-white bg-success rounded-pill w-75 fs-6 p-md-1 p-2">Active</div>'
            : '<div class="text-center text-white bg-danger rounded-pill w-75 fs-6 p-md-1 p-2">Inactive</div>';

          tbody.append(`
            <tr>
              <td class="text-start">${user.firstName} ${user.lastName}</td>
              <td class="text-start">${user.email}</td>
              <td class="text-start">${user.phone}</td>
              <td class="text-start">${user.roleName}</td>
              <td class="text-start">${statusBadge}</td>
              <td class="text-start">
                <a href="/User/EditUser?Email=${user.email}" class="text-dark"><i class="fa-solid fa-pen"></i></a>
                <i class="fa-solid fa-trash-can" data-bs-toggle="modal" data-bs-target="#delete-user" data-email="${user.email}"></i>
              </td>
            </tr>
          `);
        });
      }

      // Update pagination text
      function updatePagination(totalRecords) {
        let startItem = (currentPage - 1) * itemsPerPage + 1;
        let endItem = Math.min(startItem + itemsPerPage - 1, totalRecords);

        // Update the pagination text dynamically
        $(".pagination-info").text(`Showing ${startItem}-${endItem} of ${totalRecords}`);

        // Disable buttons conditionally
        $("#left-arrow").prop("disabled", currentPage === 1);
        $("#right-arrow").prop("disabled", endItem >= totalRecords);
      }


      // Search function (on keyup)
      $("#search-btn").on("keyup", function () {
        searchTerm = $(this).val();
        currentPage = 1;
        fetchUsers();
      });

      // Change items per page
      $("#itemselect").on("change", function () {
        itemsPerPage = parseInt($(this).val());
        currentPage = 1; // Reset to first page when changing items per page
        fetchUsers();
      });

      // Next page
      $("#right-arrow").on("click", function () {
        currentPage++;
        fetchUsers();
      });

      // Previous page
      $("#left-arrow").on("click", function () {
        if (currentPage > 1) {
          currentPage--;
          fetchUsers();
        }
      });

      // Fetch users on page load
      fetchUsers();
    });
  </script>





  @* Pagination script *@
  @* <script>
function changePage(page) {
const PageSize = document.getElementById("PageSize").value;
window.location.href = `?PageNo=${page}&PageSize=${PageSize}`;
}

function pageSizeChange(page) {
const PageSize = document.getElementById("PageSize").value;
window.location.href = `?PageNo=${page}&PageSize=${PageSize}`;
}

</script> *@


}