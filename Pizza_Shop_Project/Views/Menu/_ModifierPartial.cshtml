@using DAL.ViewModels
@model PaginationViewModel<ModifiersViewModel>
@using Microsoft.AspNetCore.Authorization
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService;

@if (Model.Items.Count == 0)
{
    <tr>
        <td colspan="6" class="text-center text-danger fw-bold">No Records Found</td>
    </tr>
}
else
{
    @foreach (var item in Model.Items)
    {
        <tr class="border border-end-0 border-start-0 border-top-0 border-bottom-1">
            <td class="text-start text-nowrap align-content-center d-flex">
                @if ((await AuthorizationService.AuthorizeAsync(User, "Menu.Delete")).Succeeded)
                {
                    <input class="modifier-sub-checkbox form-check-input me-3 mt-2" onclick=CheckBoxTickManageMod() type="checkbox"
                        data-checkid="@item.ModifierId">
                }
                <p class="mt-2">@item.ModifierName</p>
            </td>
            <td class="text-center">@item.Unit</td>
            <td class="text-center">@item.Rate</td>
            <td class="text-center">@item.Quantity</td>
            @if ((await AuthorizationService.AuthorizeAsync(User, "Menu.AddEdit")).Succeeded)
            {
                <td class="text-center">
                    <i class="fa-solid fa-pen w-25" data-bs-toggle="modal" data-bs-target="#EditModifierModal"
                        data-id="@item.ModifierId"></i>
                    @if ((await AuthorizationService.AuthorizeAsync(User, "Menu.Delete")).Succeeded)
                    {
                        <i class="fa-solid fa-trash-can ms-2 " data-bs-toggle="modal" data-bs-target="#delete-modifier-modal"
                            data-id="@item.ModifierId" onclick=GetIdForDeleteModifierItem(this)></i>
                    }
                </td>
            }
        </tr>

    }
}
<input type="hidden" id="totalRecordsHidden-modifier" value="@Model.TotalCount" />