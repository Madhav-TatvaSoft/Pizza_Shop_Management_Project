@model DAL.ViewModels.MenuViewModel
<!-- Menu text  -->
<div class="user-text bg-light fs-3 mt-3 fw-bold  mb-3 ps-4">Menu
</div>

<div class="tabs bg-light d-flex justify-content-between">

    <div class="container-fluid">

        <div class="bg-white">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item " role="presentation">
                    <button class="nav-link active fw-semibold text-dark" id="home-tab" data-bs-toggle="tab"
                        data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane"
                        aria-selected="true"><i class="bi bi-list-check pe-2 pb-1"></i>Items</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link fw-semibold text-dark" id="profile-tab" data-bs-toggle="tab"
                        data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane"
                        aria-selected="false"><i class="bi bi-ui-checks-grid  pe-2 pb-1"></i>Modifiers</button>
                </li>
            </ul>
        </div>

        <div class="item-tab tab-content bg-white" id="myTabContent">

            <!-- Item -->
            <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab">

                <div class="row d-flex m-1 ms-0 me-0">

                    @* Left-SideBar-Item *@
                    <div class="left-sidebar-category-main-div bg-opacity-10 col-xl-2 col-lg-3 col-md-4 col-sm-12 ps-0 pe-0 pb-3"
                        style="overflow-y:scroll;">

                        <div class="user-text p-3 d-flex justify-content-between">
                            <span class="fw-bold fs-5">Category</span>
                            <i class="fa-regular fa-square-plus fs-4 user-text" data-bs-toggle="modal"
                                data-bs-target="#exampleModal-addCategory"></i>
                        </div>

                        <!-- Categories -->
                        @{
                            int index = 0;
                        }
                        @foreach (var item in Model.categoryList)
                        {
                            <a class="CategoryGet @(index==0 ? "active-category" : "") d-flex align-items-center justify-content-between col-12 p-2 ps-3 text-decoration-none text-secondary"
                                data-id="@item.CategoryId" id="Cat_id">

                                <div class="d-flex justify-content-start">
                                    <i class="fa-solid fa-grip-vertical me-2 mt-1"></i>
                                    <p class="mt-1">@item.CategoryName</p>
                                </div>

                                <div class="d-flex text-secondary justify-content-end">
                                    <input type="hidden" value="@item.Description">
                                    <i class="fa-solid fa-pen me-2 text-secondary"
                                        onclick="GetDetailsForCategoryUpdate(this)" data-id="@item.CategoryId"
                                        data-bs-toggle="modal" data-bs-target="#exampleModal-editCategory"></i>
                                    <i class="fa-solid fa-trash-can text-secondary" onclick="GetIdForDeleteCategory(this)"
                                        data-id="@item.CategoryId" data-bs-toggle="modal"
                                        data-bs-target="#exampleModal-deleteCategory"></i>
                                </div>

                            </a>
                            index++;
                        }

                    </div>

                    @* Right-SideBar-Item *@
                    <div class="right-side-table-div bg-white mt-2 pt-2 com-sm-12 col-md-8 col-lg-9 col-xl-10 col-12 ">
                        <div class="menu-text fs-3 fw-bold user-text">Items</div>
                        <div class="search-adduser-div d-flex justify-content-end pb-2 align-items-center">
                            <div class="search-button">
                                <input type="text" id="searchbtn-item" placeholder="Search"
                                    class=" p-sm-1 mt-2 border ">
                                <i class="fa-solid fa-magnifying-glass search-icon-item "></i>
                            </div>

                            <div class="trash-button-item">
                                <button class="btn mt-2 p-1 ps-2 pe-2 ms-2 border"><i
                                        class="fa-solid fa-trash-can "></i></button>
                            </div>
                            <div class="add-user-button">
                                <button type="button"
                                    class="addItemBtn btn solid-btn text-light p-1 mt-2 ms-2 me-sm-2 me-0"
                                    data-bs-toggle="modal" data-bs-target="#addItemModal">
                                    + New Item
                                </button>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table mb-0" id="demo">
                                <thead>
                                    <tr class="border border-end-0 border-start-0 border-top-0 border-bottom-1">
                                        <th scope="col" class="text-start"><input class="form-check-input me-3 "
                                                type="checkbox" id="item-main-checkbox"
                                                onclick="Item_Main_Checkbox_Select()">Name</th>
                                        <th scope="col" class="text-center text-nowrap">Item Type</th>
                                        <th scope="col" class="text-center">Rate</th>
                                        <th scope="col" class="text-center">Quantity</th>
                                        <th scope="col" class="text-center">Available</th>
                                        <th scope="col" class="text-center">Action</th>

                                    </tr>
                                </thead>
                                <tbody style="white-space: nowrap;" id="item-list-body">

                                    @*Partial View of Items*@
                                    @await Html.PartialAsync("_ItemPartialView", Model.PaginationForItemByCategory)

                                </tbody>
                            </table>
                        </div>

                        @* Pagination Item div *@
                        <div
                            class="pagination-main-div-item d-flex justify-content-end gap-2 p-3 pt-0 bg-white ms-3 me-2 mt-3">

                            <span class="mt-2">Items Per page:</span>

                            <select id="itemselect-item">
                                <option value="3">3</option>
                                <option value="5">5</option>
                                <option value="10">10</option>
                            </select>

                            <span class=" mt-2 ms-1" id="pagination-info-item"></span>
                            <button id="left-arrow-item" class="btn border border-dark bg-light ms-2">&lt;</button>
                            <button id="right-arrow-item" class="btn border border-dark bg-light ms-2">&gt;</button>
                        </div>

                    </div>
                </div>

            </div>

            <!-- MODIFIER  -->
            <div class="tab-pane fade " id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab"
                tabindex="1">

                <div class="row d-flex m-1 ms-0 me-0">

                    @* Left-SideBar-Modifier *@
                    <div class="left-sidebar-modifier-main-div bg-opacity-10 col-xl-2 col-lg-3 col-md-4 col-sm-12 ps-0 pe-0"
                        style="overflow-y:scroll;">

                        <div class="user-text p-3 d-flex justify-content-between">
                            <span class="fw-bold fs-5">Modifier</span>
                            <i class="fa-regular fa-square-plus fs-4 user-text" data-bs-toggle="modal"
                                data-bs-target="#exampleModal-addModifier"></i>
                        </div>
                        <!-- Tomato -->
                        @foreach (var item in Model.categoryList)
                        {
                            <a class="ModifierGet d-flex align-items-center justify-content-between col-12 p-2 ps-3 text-decoration-none text-secondary"
                                data-id="@item.CategoryId">

                                <div class="d-flex justify-content-start ">
                                    <i class="fa-solid fa-grip-vertical me-2 mt-1"></i>
                                    <p class="mt-1">@item.CategoryName</p>
                                </div>

                                <div class="d-flex text-secondary justify-content-end">
                                    <input type="hidden" value="@item.Description">
                                    <i class="fa-solid fa-pen me-2 text-secondary"
                                        onclick="GetDetailsForCategoryUpdate(this)" data-id="@item.CategoryId"
                                        data-bs-toggle="modal" data-bs-target="#exampleModal-editCategory"></i>
                                    <i class="fa-solid fa-trash-can text-secondary" onclick="GetIdForDeleteCategory(this)"
                                        data-id="@item.CategoryId" data-bs-toggle="modal"
                                        data-bs-target="#exampleModal-deleteCategory"></i>
                                </div>

                            </a>
                        }

                    </div>

                    @* Right-SideBar-Modifier *@
                    <div class="right-side-table-div bg-white mt-2 pt-2 com-sm-12 col-md-8 col-lg-9 col-xl-10 col-12 ">

                        <div class="menu-text fs-3 fw-bold user-text">Modifiers</div>
                        <div class="search-adduser-div d-flex justify-content-end pb-2 align-items-center">
                            <div class="search-button">
                                <input type="text" id="searchbtn-modifier" placeholder="Search"
                                    class=" p-sm-1 mt-2 border ">
                                <i class="fa-solid fa-magnifying-glass search-icon-item "></i>
                            </div>

                            <div class="trash-button-modifier">
                                <a class="btn mt-2 p-1 ps-2 pe-2 ms-2 border"><i class="fa-solid fa-trash-can "></i></a>
                            </div>
                            <div class="add-user-button">
                                <button type="button"
                                    class="addModifierBtn btn solid-btn text-light p-1 mt-2 ms-2 me-sm-2 me-0"
                                    data-bs-toggle="modal" data-bs-target="#addModifierModal">
                                    + New Modifier
                                </button>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table mb-0" id="demo">
                                <thead>
                                    <tr class="border border-end-0 border-start-0 border-top-0 border-bottom-1">
                                        <th scope="col" class="text-start"><i
                                                class="fa-regular fa-square-minus me-3"></i>Name</th>
                                        <th scope="col" class="text-center">Unit</th>
                                        <th scope="col" class="text-center">Rate</th>
                                        <th scope="col" class="text-center">Quantity</th>
                                        <th scope="col" class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody style="white-space: nowrap;" id="modifier-list-body">

                                </tbody>
                            </table>
                        </div>
                        @* Pagination Modifier div *@
                        <div
                            class="pagination-main-div-modifier d-flex justify-content-end gap-2 p-3 pt-0 bg-white ms-3 me-2 mt-3">

                            <span class="mt-2">Items Per page:</span>

                            <select id="itemselect-modifier">
                                <option value="3">3</option>
                                <option value="5">5</option>
                                <option value="10">10</option>
                            </select>

                            <span class=" mt-2 ms-1" id="pagination-info-modifier"></span>
                            <a id="left-arrow-modifier" class="btn border border-dark bg-light ms-2">&lt;</a>
                            <a id="right-arrow-modifier" class="btn border border-dark bg-light ms-2">&gt;</a>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@*
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*@
@* --------------------------------------------------------------------All Modals Are
Here----------------------------------------------------------------------------------- *@
@*
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*@

<!-- Add categorty modal  -->
<div class="modal fade" id="exampleModal-addCategory" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5 fw-bold text-secondary" id="exampleModalLabel">Add Category</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AddCategory" asp-Controller="Menu" method="post">
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" asp-for="@Model.category.CategoryName" class="form-control"
                            id="floatingInput" placeholder="First Name" required>
                        <span asp-validation-for="@Model.category.CategoryName" class="text-danger"></span>
                        <label for="floatingInput" class="fs-6 text-secondary">Name</label>
                    </div>

                    <div class="form-floating ">
                        <input type="text" asp-for="@Model.category.Description" class="form-control" id="floatingInput"
                            placeholder="Last Name">
                        <label for="floatingInput" class="fs-6 text-secondary">Description</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn solid-btn">Save</button>
                    <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit category modal -->
<div id="exampleModal-editCategory" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="EditCategoryById" asp-controller="Menu">
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="hidden" asp-for="@Model.category.CategoryId" id="category-id">
                        <input type="text" class="form-control" id="category-name"
                            asp-for="@Model.category.CategoryName" placeholder="Name*" required>
                        <span asp-validation-for="@Model.category.CategoryName" class="text-danger"></span>

                        <label for="category-name">Name</label>
                    </div>
                    <div class="form-floating">
                        <textarea class="form-control" placeholder="Leave a comment here"
                            asp-for="@Model.category.Description" id="category-description"></textarea>
                        <label for="category-description">Description</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="updatebtn" class="btn solid-btn">save</button>
                    <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete category Modal-->
<div id="exampleModal-deleteCategory" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="delete-cat-image d-flex flex-column  align-items-center">
                    <img src="../images/toppng.com-warning-icon-2400x2400.png" width="50px" alt="">
                    <p>Are you sure you want to delete this Category?</p>
                </div>
            </div>
            <form asp-action="DeleteCategory" asp-controller="Menu">
                <input type="hidden" asp-for="@Model.category.CategoryId" id="category-id-for-delete" name="Cat_Id">
                <div class="modal-footer d-flex justify-content-center">
                    <button type="submit" class="btn solid-btn">Yes</button>
                    <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Items modal-->
<div class="modal fade" id="addItemModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        @await Html.PartialAsync("_AddItemPartial", Model)
    </div>
</div>

<!-- Edit Items modal-->
<div class="modal fade" id="EditItemModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" id="EditModal">
        @* @await Html.PartialAsync("_EditItemPartial", Model) *@
    </div>
</div>


<!-- Delete Item Modal-->
<div id="delete-item-modal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold text-secondary">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="d-flex justify-content-center"><img src="../images/toppng.com-warning-icon-2400x2400.png"
                        style="width: 30px;" alt=""></div>
                <p class="fw-bold text-secondary text-center">Are you sure you want to delete this Item ?</p>
                <form method="post" asp-action="DeleteItem" asp-controller="Menu">
                    <input type="hidden" id="deleteitemid" name="itemid" />

                    <div class="modal-footer d-flex justify-content-center">
                        <button type="submit" class="btn solid-btn">Yes</button>
                        <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    @* Display FileName *@
    <script>
        $("#uploadFile-item").change(function () {
            const file = this.files[0];
            $("#browseFileText-item").text(file.name);
        });
    </script>



    @* Toaster Message *@
    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            console.log("successMessage", successMessage);
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "timeOut": "2000"
            };
            if (successMessage) {
                toastr.success(successMessage);
            }
            if (errorMessage) {
                toastr.error(errorMessage);
            }
        });
    </script>

    <script>

        // Get details for Edit Categories
        function GetDetailsForCategoryUpdate(tag) {
            event.stopPropagation();
            document.getElementById("category-id").value = tag.getAttribute("data-id");
            document.getElementById("category-name").value = tag.parentElement.parentElement.children[0].children[1].innerHTML;
            document.getElementById("category-description").value = tag.parentElement.children[0].value;
        }

        //  Get details for Delete Categories  
        function GetIdForDeleteCategory(tag) {
            console.log(tag);
            document.getElementById("category-id-for-delete").value = tag.getAttribute("data-id");
        }

        // Items Main checkbox tick  
        function Item_Main_Checkbox_Select() {
            console.log("HELLO");
            var main_checkbox = document.getElementById("item-main-checkbox");
            var sub_checkboxes = document.getElementsByClassName("item-sub-checkbox");
            console.log(sub_checkboxes);
            if (main_checkbox.checked) {
                for (i = 0; i < sub_checkboxes.length; i++) {
                    sub_checkboxes[i].checked = true;
                }
            }
            if (!main_checkbox.checked) {
                for (i = 0; i < sub_checkboxes.length; i++) {
                    sub_checkboxes[i].checked = false;
                }
            }
        }

        // Checkbox tick Manage  
        function CheckBoxTickManage() {
            console.log("hello");
            var sub_checkboxes = document.getElementsByClassName("item-sub-checkbox");
            var main_checkbox = document.getElementById("item-main-checkbox");
            flag = true;
            for (i = 0; i < sub_checkboxes.length; i++) {
                if (!sub_checkboxes[i].checked) {
                    flag = false;
                }
            }
            main_checkbox.checked = flag
        }

        // Delete any particular item 
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModalItem = document.getElementById('delete-item-modal');
            deleteModalItem.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var itemid = button.getAttribute('data-id');
                var deleteItemInput = document.getElementById('deleteitemid');
                deleteItemInput.value = itemid;
            });
        });


    </script>

    <script>

        let currentPage = 1;
        let searchText = "";
        let pageSize = $("#itemselect-item").val();
        let catid = $("#Cat_id").data("id");

        function PaginatedItemTable(catid, search = "", page = 1, pageSize = 3) {
            $.ajax({
                url: "/Menu/PaginationMenuItemsByCategory",
                type: "GET",
                data: { catid, search, pageNumber: page, pageSize },
                success: function (data) {

                    $("#item-list-body").html(data);

                    currentPage = page;
                    pageSize = parseInt(pageSize);

                    var totalRecords = parseInt($("#totalRecordsHidden-item").val()) || 0;

                    var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;

                    var endItem = Math.min(currentPage * pageSize, totalRecords);

                    $("#pagination-info-item").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
                    $("#left-arrow-item").prop("disabled", currentPage === 1);
                    $("#right-arrow-item").prop("disabled", currentPage * pageSize >= totalRecords);

                    $("#item-main-checkbox").prop("checked", false);
                }
            });
        }

        $(document).ready(function () {

            PaginatedItemTable(catid, searchText, currentPage, pageSize);

            // search-button
            $("#searchbtn-item").on("keyup", function () {
                searchText = $(this).val().trim();
                currentPage = 1;
                PaginatedItemTable(catid, searchText, currentPage, pageSize);
                Item_Main_Checkbox_Select();
            });

            // Category click
            $(".CategoryGet").on("click", function () {
                $(".CategoryGet").removeClass("active-category");
                $(this).addClass("active-category");
                catid = $(this).data("id");
                currentPage = 1;
                PaginatedItemTable(catid, searchText, currentPage, pageSize);
            });

            // Pagination right arrow buttons
            $("#right-arrow-item").on("click", function () {
                let rightarrow = !$(this).prop("disabled");
                if (rightarrow) {
                    currentPage++;
                    PaginatedItemTable(catid, searchText, currentPage, pageSize);
                    Item_Main_Checkbox_Select();
                }
            });

            // Pagination left arrow buttons
            $("#left-arrow-item").on("click", function () {
                let leftarrow = !$(this).prop("disabled");
                if (leftarrow) {
                    currentPage--;
                    PaginatedItemTable(catid, searchText, currentPage, pageSize);
                    Item_Main_Checkbox_Select();
                }
            });

            // Items per page dropdown
            $("#itemselect-item").on("change", function () {
                pageSize = $(this).val();
                currentPage = 1;
                PaginatedItemTable(catid, searchText, currentPage, pageSize);
                Item_Main_Checkbox_Select();
            });

            $("#AddItemForm").on("submit", function (e) {
                e.preventDefault();
                let form = $("#AddItemForm");
                if (form.valid()) {
                    let formData = new FormData(this);
                    $.ajax({
                        url: "/Menu/AddItem",
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            $(".btn-close").click();
                            PaginatedItemTable(catid, searchText, currentPage, pageSize);
                            Item_Main_Checkbox_Select();
                        }
                    });
                }
            })

            $("#EditItemModal").on('show.bs.modal', function (event) {
        @* console.log("Edit Item"); *@
                                        var button = $(event.relatedTarget);
        @* console.log(button) *@
                                        var itemid = button.data("id");
        @* console.log(item_id) *@
                                        if (itemid != null) {
                    $.ajax({
                        url: "/Menu/GetItemsByItemId",
                        type: "GET",
                        data: { itemid },
                        success: function (data) {
                            console.log("Edit Item");
                            $("#EditModal").html(data);
                        }
                    });
                }
            });

        @* $("#deleteAllItemsModalYesButton").on("click",function(){
            var classess=document.getElementsByClassName("massDeleteClass");
            console.log("delete all")
            for(i=0; i<classess.length;i++){
            if(classess[i].checked){

            let itemID = classess[i].getAttribute("data-checkid");
console.log(itemID)
$.ajax({
url: `/Menu/DeleteItem?itemID=${itemID}`,
type: "GET",
success: function (data) {

            loadTable(catID, searchText, currentPage, pageSize);
            }
            })
            }
            }
            }) *@
                    });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}