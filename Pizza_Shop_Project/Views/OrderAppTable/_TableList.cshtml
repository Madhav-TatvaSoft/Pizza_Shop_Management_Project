@using DAL.ViewModels;
@model List<OrderAppTableVM>;

@if (Model.Count() == 0 || Model == null)
{
    <div class="text-center text-secondary fw-bold">No Tables Found</div>
}
else
{
    @foreach (var table in Model)
    {
        <div class="table-card card border border-1 rounded-2" style="width: 270px;" data-capacity="@table.Capacity"
            data-sec="@table.SectionId" @(table.Status == "Available" ? "onclick=SelectTable(this)" :
    "onclick=OpenMenuFromTable(this)")>
            <div class="d-none">@table.TableId</div>
            <div class="d-none">@table.SectionId</div>
            <div
                class=" card-body rounded-1  d-flex flex-column bg-light text-secondary @(table.Status == "Assigned" || table.Status == "Occupied" ? "table-Assigned": table.Status == "Running"? "table-Running" : "table-Available")">
                <div class="d-flex justify-content-between align-items-center mx-1">
                    <div
                        class="fs-5 fw-bold pe-2 pb-2 @(table.Status == "Assigned" || table.Status == "Occupied" ? "text-Assigned": table.Status == "Running"? "text-Running" : "text-Available")">
                        @table.TableName</div>
                    @if (table.Status == "Running")
                    {
                        @if (table.OrderAmount > 0)
                        {
                            <div>₹@table.OrderAmount</div>
                        }
                        else
                        {
                            <div>₹ 0</div>
                        }
                    }
                </div>

                <div class="d-flex justify-content-between align-items-center mx-1 pt-2">
                    <div class="d-flex flex-column align-items-center flex-column pt-2">
                        <div><i class="bi bi-people pb-2"></i></div>
                        <div class="pt-2">@table.Capacity</div>
                        <div>&nbsp;</div>
                    </div>
                    <div class="d-flex flex-column align-items-center ">
                        <div><i class="bi bi-stopwatch"></i></div>
                        @if (table.Status == "Running" || table.Status == "Assigned" || table.Status == "Occupied")
                        {
                            <div class="pt-2 order-time" data-time="@table.TableTime.ToString("yyyy-MM-ddTHH:mm:ss")">

                                <span class="time-difference validate"></span>
                            </div>
                        }
                        else
                        {
                            <div class="text-center pt-2">0 <br> min</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}

<script>
    var IsEnable = 0;
    var customerId;

    // READY
    $(document).ready(function () {
        setInterval(updateTimeDifference, 1000);
        updateTimeDifference();
    });

    // Time Difference
    function updateTimeDifference() {
        document.querySelectorAll(".order-time").forEach(element => {

            const orderTime = element.getAttribute("data-time");
            const now = new Date();
            const diffInSeconds = Math.floor((now - new Date(element.getAttribute("data-time"))) / 1000);

            if (diffInSeconds < 0) {
                element.querySelector(".time-difference").textContent = "Just now";
                return;
            }

            let days = Math.floor(diffInSeconds / (24 * 3600));
            let hours = Math.floor((diffInSeconds % (24 * 3600)) / 3600);
            let minutes = Math.floor((diffInSeconds % 3600) / 60);
            let seconds = diffInSeconds % 60;

            element.querySelector(".time-difference").textContent = `${days}days ${hours}hours ${minutes}min ${seconds}sec`;

        });
    }

    // Function to call menu after table assigned
    function OpenMenuFromTable(tag) {

        var tableId = tag.children[0].innerHTML;
        var sectionId = tag.children[1].innerHTML;

        $.ajax({
            url: "/OrderAppTable/GetCustomerIdByTableId",
            type: "GET",
            data: { tableId },
            success: function (data) {
                customerId = data.customerId;
                var MenuBtn = document.getElementById("MenuButtonOrderApp")
                MenuBtn.setAttribute("href", `/OrderAppMenu/OrderAppMenu?customerId=${customerId}`)
                MenuBtn.click();
            }
        });
    }

</script>