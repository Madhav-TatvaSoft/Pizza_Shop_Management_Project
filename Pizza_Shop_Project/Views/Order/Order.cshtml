@using DAL.ViewModels;
@model DAL.ViewModels.PaginationViewModel<OrdersViewModel>;
@{
    ViewData["Title"] = "Orders";
    Layout = "_Layout";
}

<div class="d-flex flex-column px-3 py-3 gap-3">

    <!-- Search and All -->
    <div class="d-flex flex-lg-row flex-column justify-content-between col">
        <h1 class="fw-bold user-text fs-2 col-lg-4 pb-3">Orders</h1>
        <div class="d-flex flex-sm-row flex-column justify-content-end align-items-center gap-2 col-lg-8">
            <div class="h-100 w-100">
                <input type="text" class="form-control p-3 h-100 dt-input border" id="searchbtn" placeholder="Search"
                    aria-controls="order-list" />
                @* <i class="fa-solid fa-magnifying-glass search-icon-style-order "></i> *@
                @* <label>Search</label> *@
            </div>
            <div class="form-floating w-100">
                <select id="orderStatus" class="form-select p-2">
                    <option value="All Status" selected>All Status</option>
                    <option value="Pending">Pending</option>
                    <option value="In Progress">In Progress</option>
                    <option value="Served">Served</option>
                    <option value="Completed">Completed</option>
                    <option value="Cancelled">Cancelled</option>
                    <option value="On Hold">On Hold</option>
                    <option value="Failed">Failed</option>
                </select>

            </div>
            <div class="form-floating w-100">
                <select id="selectRange" class="form-select p-2">
                    <option value="All Time">All Time</option>
                    <option value="Last 7 days">Last 7 days</option>
                    <option value="Last 30 days">Last 30 days</option>
                    <option value="Current Month">Current Month</option>
                </select>
            </div>
            <button class="solid-btn p-3 h-100 rounded border-0 text-nowrap" id="exportBtn" onclick="ExportBtn()">
                <i class="fa-solid fa-share-from-square"></i> Export
            </button>
        </div>
    </div>

    <!-- Custom Date filter -->
    <div class="d-flex flex-lg-row flex-column justify-content-between col">
        <div class="fw-bold text-heading col-xl-6 col-lg-4"></div>
        <div class="d-flex flex-sm-row flex-column justify-content-end align-items-center gap-2 col-xl-6 col-lg-8">
            <div class="form-floating w-100">
                <input type="date" class="form-control" id="from-order-date" placeholder="dd-mm-yyyy" />
                <label>From Date</label>
            </div>
            <div class="form-floating w-100">
                <input type="date" class="form-control" id="to-order-date" placeholder="dd-mm-yyyy" />
                <label>To Date</label>
            </div>
            <button class="solid-btn p-3 px-4 h-100 rounded border-0 text-nowrap" id="search-order-btn">
                Search
            </button>
            <button class="hollow-btn p-3 px-4 border-0 h-100 rounded text-nowrap" id="clear-order-btn">
                Clear
            </button>
        </div>
    </div>

    <!-- Table of order details-->
    <div class="shadow-lg p-2 bg-white rounded">
        <div class="table-responsive p-3">
            <table class="table w-100">
                <thead>
                    <tr class="border-bottom border-dark">
                        <th class="fw-bold text-start text-nowrap">
                            <div class="d-flex">
                                <span class="pt-1"># Order</span>
                                <i class="bi bi-arrow-down-up ps-2" id="sortable-order" data-column="Order"
                                    data-direction="asc"></i>
                            </div>
                        </th>
                        <th class="fw-bold text-start">
                            <div class="d-flex">
                                <span class="pt-1">Date</span>
                                <i class="bi bi-arrow-down-up  ps-2" id="sortable-date" data-column="Date"
                                    data-direction="asc"></i>
                            </div>
                        </th>
                        <th class="fw-bold text-start">
                            <div class="d-flex">
                                <span class="pt-1">Customers</span>
                                <i class="bi bi-arrow-down-up  ps-2" id="sortable-customer" data-column="Customer"
                                    data-direction="asc"></i>
                            </div>
                        </th>
                        <th class="fw-bold text-start">
                            <div class="d-flex">
                                <span class="pt-1">Status</span>
                            </div>
                        </th>
                        <th class="fw-bold text-start text-nowrap">Payment Mode</th>
                        <th class="fw-bold text-start text-nowrap">Rating</th>
                        <th class="fw-bold text-end text-nowrap">
                            <div class="d-flex">
                                <span class="pt-1 text-nowrap">Total Amount</span>
                                <i class="bi bi-arrow-down-up  ps-2" id="sortable-amount" data-column="Amount"
                                    data-direction="asc"></i>
                            </div>
                        </th>
                        <th class="fw-bold text-center">Action </th>
                    </tr>
                </thead>
                <tbody id="OrderListBody">

                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-end gap-2 p-3 pt-0 bg-white align-items-center">
            <span>Items Per page:</span>
            <select id="itemselect" class="border border-secondary">
                <option value="5" selected>5</option>
                <option value="10">10</option>
                <option value="15">15</option>
            </select>
            <span id="pagination-info"></span>
            <button id="left-arrow" class="btn border border-dark bg-light ms-2 d-flex align-items-center">&lt;</button>
            <button id="right-arrow" class="btn border border-dark bg-light ms-2">&gt;</button>
        </div>
    </div>

</div>

<partial name="_Toaster" />
<partial name="_ValidationScriptsPartial" />

@section Scripts {

    <script>

        let currentPage = 1;
        let pageSize = $("#itemselect").val();
        let searchText = "";
        let sortColumn = "";
        let sortDirection = "asc"
        let orderStatus = $("#orderStatus").val();
        let selectRange = $("#selectRange").val();
        let fromDate = "";
        let toDate = "";
        const today = new Date().toISOString().split('T')[0];

        // LoadTable function
        function loadTable(page = 1, search = "", sortColumn = "Order", sortDirection = "asc", pageSize = 5, orderStatus, fromDate, toDate, selectRange) {
            $.ajax({
                url: "/Order/PaginationForOrder",
                type: "GET",
                data: { search, sortColumn, sortDirection, pageNumber: page, pageSize, orderStatus, fromDate, toDate, selectRange },
                success: function (data) {

                    $("#OrderListBody").html(data);

                    currentPage = page;
                    pageSize = parseInt(pageSize);

                    var totalRecords = parseInt($("#totalRecordsHidden").val()) || 0;

                    var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;

                    var endItem = Math.min(currentPage * pageSize, totalRecords);

                    $("#pagination-info").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
                    $("#left-arrow").prop("disabled", currentPage === 1);
                    $("#right-arrow").prop("disabled", currentPage * pageSize >= totalRecords);
                }
            });
        }

        // Export to Excel Function
        function ExportBtn() {
            searchText = $("#searchbtn").val().trim();
            orderStatus = $("#orderStatus").val();
            selectRange = $("#selectRange").val();
            $.ajax({
                url: "/Order/ExportOrderDataToExcel",
                type: "GET",
                data: { search: searchText, orderStatus, selectRange },
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (data, status, xhr) {
                    let filename = "Orders.xlsx";

                    let disposition = xhr.getResponseHeader('Content-Disposition');
                    if (disposition && disposition.indexOf('attachment') !== -1) {
                        let matches = /filename="([^"]+)"/.exec(disposition);
                        if (matches !== null && matches[1]) filename = matches[1];
                    }

                    let blob = new Blob([data], { type: xhr.getResponseHeader('Content-Type') });
                    let link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = filename;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    let text = "Excel Exported Successfully"
                    callSuccessToaster(text);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    let Text = "Failed to Export Excel"
                    callErrorToaster(Text);
                }
            });
        }

        $(document).ready(function () {

            // Search on keyup
            $("#searchbtn").on("keyup", function () {
                searchText = $(this).val().trim();
                currentPage = 1;
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Sorting Order functionality
            $("#sortable-order").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Sorting Date functionality
            $("#sortable-date").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Sorting Customer functionality
            $("#sortable-customer").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Sorting Amount functionality
            $("#sortable-amount").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Right Arrow Key
            $("#right-arrow").on("click", function () {
                let rightarrow = !$(this).prop("disabled");
                if (rightarrow) {
                    currentPage++;
                    loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
                }
            });

            // Left Arrow Key
            $("#left-arrow").on("click", function () {
                let leftarrow = !$(this).prop("disabled");
                if (leftarrow) {
                    currentPage--;
                    loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
                }
            });

            // Item Select
            $("#itemselect").on("change", function () {
                pageSize = $(this).val();
                console.log("items-" + pageSize);
                currentPage = 1;
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Order Status
            $("#orderStatus").on("change", function () {
                orderStatus = $(this).val();
                console.log(orderStatus);
                currentPage = 1;
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Select Range
            $("#selectRange").on("change", function () {
                selectRange = $(this).val();
                currentPage = 1;
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Search Order Date
            $("#search-order-btn").on("click", function () {
                fromDate = $("#from-order-date").val();
                toDate = $("#to-order-date").val();
                currentPage = 1;
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);
            });

            // Clear Order Date
            $("#clear-order-btn").on("click", function () {
                $("#from-order-date").val("");
                $("#to-order-date").val("");
                $("#searchbtn").val("");
                $("#orderStatus").val("All Status");
                $("#selectRange").val("All Time");
                searchText = "";
                fromDate = "";
                toDate = "";
                orderStatus = "";
                selectRange = "";
                currentPage = 1;
                loadTable(currentPage, searchText, sortColumn, sortDirection, pageSize, orderStatus, fromDate, toDate, selectRange);

            });

            $("#from-order-date").on("change", function () {
                fromDate = document.getElementById("from-order-date").value;
                toDate = document.getElementById("to-order-date").value;
                @* console.log(fromDate)
                console.log(toDate); *@
                if (toDate == "") return
                if (toDate < fromDate) {
                    callErrorToaster("To-date should be greater than From-date. Reset To-date");
                    document.getElementById("to-order-date").value = "";
                }
            })
            $("#to-order-date").on("change", function () {
                fromDate = document.getElementById("from-order-date").value;
                toDate = document.getElementById("to-order-date").value;
                @* console.log(fromDate)
                console.log(toDate); *@
                if (toDate < fromDate) {
                    callErrorToaster("To-date should be greater than From-date. Reset To-date");
                    document.getElementById("to-order-date").value = "";
                }
            })

            loadTable();
            // End of Ready
        });
    </script>
}