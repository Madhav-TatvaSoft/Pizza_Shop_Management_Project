@model DAL.ViewModels.TableSectionViewModel
@using Microsoft.AspNetCore.Authorization
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService;

@{
    ViewData["Title"] = "Tables/Sections";
    Layout = "_Layout";
}

<!-- Section Table text  -->
<div class="user-text bg-light fs-3 pt-4 fw-bold  pb-3 ps-md-4">Sections/Tables</div>

<div class="bg-light d-flex justify-content-between">

    <div class="container-fluid ps-3 pe-2 p-0">

        <!-- Tables -->
        <div class="row d-flex m-1 ms-0 me-0">

            @* Left-SideBar-table *@
            <div class="left-sidebar-section-main-div bg-opacity-10 col-xl-2 col-lg-3 col-md-4 col-sm-12 ps-0 pe-0 pb-3 border border-primary border-bottom-0 border-end-1
            border-start-0 border-top-0 shadow-lg">

                <div class="user-text p-3 d-flex justify-content-between">
                    <span class="fw-bold fs-5">Sections</span>
                    @if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.AddEdit")).Succeeded)
                    {
                        <i class="fa-regular fa-square-plus fs-4 user-text" data-bs-toggle="modal"
                            data-bs-target="#AddSectionModal" id="AddSectionModalId"></i>
                    }
                </div>

                <div id="SectionList_Partial" style="overflow-y:scroll; height:260px;">

                </div>

            </div>

            @* Right-SideBar-Item *@
            <div class="right-side-table-div bg-white pt-2 com-sm-12 col-md-8 col-lg-9 col-xl-10 col-12 shadow-lg">
                <div class="table-text fs-3 fw-bold user-text ps-1 pt-1">Tables</div>
                <div class="search-adduser-div d-flex justify-content-end pb-2 align-items-center gap-2">

                    <input type="hidden" id="Section_id" value="@Model.SectionList[0].SectionId">

                    <div class="search-button pt-2">
                        <input type="text" id="searchbtn-table" placeholder="Search" class=" p-sm-1 border ">
                        <i class="fa-solid fa-magnifying-glass search-icon-item "></i>
                    </div>
                    @if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.AddEdit")).Succeeded)
                    {
                        @if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.Delete")).Succeeded)
                        {
                            <div class="trash-button-table pt-2">
                                <button disabled id="MassDeleteTablesBtn" class="btn p-1 ps-2 pe-2 border"
                                    data-bs-toggle="modal" data-bs-target="#MassDeleteTablesModal"><i
                                        class="fa-solid fa-trash-can "></i></button>
                            </div>
                        }
                        <div class="add-user-button pt-2 pe-sm-2 pe-0">
                            <button type="button" class="btn solid-btn text-light p-1" data-bs-toggle="modal"
                                data-bs-target="#AddTableModal" id="AddTableModalId">
                                + <span class="d-none d-md-inline">New Table</span>
                            </button>
                            <input type="hidden" id="Section_id_Table">
                        </div>
                    }
                </div>

                <!-- Table -->
                <div class="table-responsive">
                    <table class="table mb-0" id="demo">
                        <thead>
                            <tr class="border border-top-0 border-end-0 border-start-0 border-dark">
                                <th scope="col" class="text-start text-nowrap fw-bold">
                                    @if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.Delete")).Succeeded)
                    {<input
                                        class="form-check-input me-3 mt-0 " type="checkbox" id="table-main-checkbox"
                                        onclick="Table_Main_Checkbox_Select()">
                                        }Name</th>
                                <th scope="col" class="text-center fw-bold">Capacity</th>
                                <th scope="col" class="text-center fw-bold">Status</th>
                                @if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.AddEdit")).Succeeded)
                    {
                                <th scope="col" class="text-center fw-bold">Action</th>
                                }

                            </tr>
                        </thead>
                        <tbody style="white-space: nowrap;" id="table-list-body">

                        </tbody>
                    </table>
                </div>

                @* Pagination Item div *@
                <div class="pagination-main-div-table d-flex justify-content-end gap-2 p-3 pt-3 bg-white ps-3 pe-2">

                    <span class="pt-2">Items Per page:</span>

                    <select id="itemselect-table">
                        <option value="3">3</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                    </select>

                    <span class=" pt-2 ps-1" id="pagination-info-table"></span>
                    <button id="left-arrow-table" class="btn border border-dark bg-light ps-2">&lt;</button>
                    <button id="right-arrow-table" class="btn border border-dark bg-light ps-2">&gt;</button>
                </div>

            </div>
        </div>
    </div>
</div>


<!------------------------------------Modals---------------------------------------------->


<!--------------------------------Section--------------------------------------->

<!-- Add Section modal  -->
<div class="modal fade" id="AddSectionModal" tabindex="-1" aria-labelledby="exampleModalLabel" data-bs-backdrop="static"
    data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="AddSection-Content">

    </div>
</div>

<!-- Edit Section modal  -->
<div class="modal fade" id="EditSectionModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="EditSection-Content">

    </div>
</div>

<!-- Delete Section Modal-->
<div class="modal fade" id="DeleteSectionModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5 fw-bold text-secondary">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="d-flex justify-content-center mb-3"><img
                        src="../images/toppng.com-warning-icon-2400x2400.png" style="width: 30px;" alt=""></div>
                <p class="fw-semibold text-secondary text-center mb-3">Are you sure you want to delete this Section ?
                </p>
                <form id="DeleteSectionForm">
                    <input type="hidden" asp-for="@Model.section.SectionId" name="sectionid" id="DeleteSectionId">
                    <div class="modal-footer mt-3 d-flex justify-content-center">
                        <button type="submit" class="btn solid-btn" data-bs-dismiss="modal">Yes</button>
                        <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--------------------------------Tables--------------------------------------->

<!-- Add Table modal  -->
<div class="modal fade" id="AddTableModal" tabindex="-1" aria-labelledby="exampleModalLabel" data-bs-backdrop="static"
    data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="AddTable-Content">

    </div>
</div>


<!-- Edit Table modal  -->
<div class="modal fade" id="EditTableModal" tabindex="-1" aria-labelledby="exampleModalLabel" data-bs-backdrop="static"
    data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="EditTable-Content">

    </div>
</div>

<!-- Delete Table Modal-->
<div class="modal fade" id="DeleteTableModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5 fw-bold text-secondary">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="d-flex justify-content-center mb-3"><img
                        src="../images/toppng.com-warning-icon-2400x2400.png" style="width: 30px;" alt=""></div>
                <p class="fw-semibold text-secondary text-center mb-3">Are you sure you want to delete this Table ?
                </p>
                <form id="DeleteTableForm">
                    <input type="hidden" asp-for="@Model.Tables.TableId" id="DeleteTableId" name="tableid">
                    <div class="modal-footer mt-3 d-flex justify-content-center">
                        <button type="submit" class="btn solid-btn" data-bs-dismiss="modal">Yes</button>
                        <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Mass Delete Table Modal-->
<div class="modal fade" id="MassDeleteTablesModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold text-secondary">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="d-flex justify-content-center"><img src="../images/toppng.com-warning-icon-2400x2400.png"
                    style="width: 30px;" class="mt-2 mb-2" alt=""></div>
            <p class="fw-semibold text-secondary text-center mb-3">Are you sure you want to delete all this Tables ?
            </p>
            <div class="modal-footer d-flex justify-content-center">
                <button type="submit" class="btn solid-btn" id="MassDeleteTableModal_YesButton"
                    data-bs-dismiss="modal">Yes</button>
                <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<!------------------------------------End of Modals---------------------------------------------->

<partial name="_ValidationScriptsPartial" />
<partial name="_Toaster" />

@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>

        // Get details for Delete Section
        function GetIdForDeleteSection(tag) {
            let currentSectionId = document.getElementById("DeleteSectionId");
            currentSectionId.value = tag.getAttribute("data-id");
        }

        // Get details for Delete Table
        function GetIdForDeleteTable(tag) {
            let currentTableId = document.getElementById("DeleteTableId");
            currentTableId.value = tag.getAttribute("data-id");
        }

        // Table Main checkbox tick  
        function Table_Main_Checkbox_Select() {
            var main_checkbox = document.getElementById("table-main-checkbox");
            var sub_checkboxes = document.getElementsByClassName("table-sub-checkbox");
            var MassDeleteTablesBtn = document.getElementById("#MassDeleteTablesBtn");
            if (main_checkbox.checked) {
                for (i = 0; i < sub_checkboxes.length; i++) {
                    sub_checkboxes[i].checked = true;
                }
            }
            if (!main_checkbox.checked) {
                for (i = 0; i < sub_checkboxes.length; i++) {
                    sub_checkboxes[i].checked = false;
                }
            }
            toggleMassDeleteBtnMod();
        }

        // Table Mass Delete Button
        function toggleMassDeleteBtnMod() {
            var sub_checkboxes = document.getElementsByClassName("table-sub-checkbox");
            var MassDeleteTablesBtn = document.getElementById("MassDeleteTablesBtn");
            var anyChecked = false;

            for (i = 0; i < sub_checkboxes.length; i++) {
                if (sub_checkboxes[i].checked) {
                    anyChecked = true;
                    break;
                }
            }
            MassDeleteTablesBtn.disabled = !anyChecked;
        }

        // Table Toggle on sub_checkboxes
        document.addEventListener('DOMContentLoaded', (event) => {
            var sub_checkboxes = document.getElementsByClassName("table-sub-checkbox");
            for (i = 0; i < sub_checkboxes.length; i++) {
                sub_checkboxes[i].addEventListener('change', toggleMassDeleteBtnMod);
            }
        });

        // Table Checkbox tick Manage  
        function TableCheckBoxTickManage() {
            var main_checkbox = document.getElementById("table-main-checkbox");
            var sub_checkboxes = document.getElementsByClassName("table-sub-checkbox");
            flag = true;
            for (i = 0; i < sub_checkboxes.length; i++) {
                if (!sub_checkboxes[i].checked) {
                    flag = false;
                }
            }
            main_checkbox.checked = flag;
            toggleMassDeleteBtnMod();
        }

    </script>

    <script>
        // All Data for Modifiers
        let currentPage_table = 1;
        let searchText_table = "";
        let pageSize_table = $("#itemselect-table").val();
        let sectionid = $("#Section_id").val();

        // Table Pagination function
        function PaginationForTable(sectionid, searchText_table = "", page = 1, pageSize_table = 3) {
            $.ajax({
                url: "/TableSection/PaginationForTable",
                type: "GET",
                data: { sectionid, search: searchText_table, pageNumber: page, pageSize: pageSize_table },
                success: function (data) {
                    
                    // Check if the response is HTML
                    IsHtmlDoc(data);

                    $("#table-list-body").html(data);

                    currentPage_table = page;
                    pageSize_table = parseInt(pageSize_table);

                    var totalRecords_table = parseInt($("#totalRecordsHidden-table").val()) || 0;

                    var startItem_table = totalRecords_table === 0 ? 0 : (currentPage_table - 1) * pageSize_table + 1;

                    var endItem_table = Math.min(currentPage_table * pageSize_table, totalRecords_table);

                    $("#pagination-info-table").text("Showing " + startItem_table + " - " + endItem_table + " of " + totalRecords_table);
                    $("#left-arrow-table").prop("disabled", currentPage_table === 1);
                    $("#right-arrow-table").prop("disabled", currentPage_table * pageSize_table >= totalRecords_table);

                    $("#table-main-checkbox").prop("checked", false);

                }
            });
        }

        // To show the Section List Partially
        function loadSectionList() {
                $.ajax({
                    url: "/TableSection/GetAllSections",
                    type: "GET",
                    success: function (data) {
                        // Check if the response is HTML
                    IsHtmlDoc(data);
                        document.getElementById("SectionList_Partial").innerHTML = data;
                        }
                });
        }

    </script>
    
    <script>
        $(document).ready(function () {

            PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);

            loadSectionList();

            // search-button
            $("#searchbtn-table").on("keyup", function () {
                searchText_table = $(this).val().trim();
                currentPage_table = 1;
                PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
                Table_Main_Checkbox_Select();
            });

            // Section click
            $(document).on("click", ".SectionGet", function () {
                $(".SectionGet").removeClass("active-category");
                $(this).addClass("active-category");
                sectionid = $(this).data("id");
                currentPage_table = 1;
                PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
            });

            // right arrow buttons
            $("#right-arrow-table").on("click", function () {
                let right_arrow_table = !$(this).prop("disabled");
                if (right_arrow_table) {
                    currentPage_table++;
                    PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
                    Table_Main_Checkbox_Select();
                }
            });

            // left arrow buttons
            $("#left-arrow-table").on("click", function () {
                let left_arrow_table = !$(this).prop("disabled");
                if (left_arrow_table) {
                    currentPage_table--;
                    PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
                    Table_Main_Checkbox_Select();
                }
            });

            // Items per page dropdown
            $("#itemselect-table").on("change", function () {
                pageSize_table = $(this).val();
                currentPage_table = 1;
                PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
                Table_Main_Checkbox_Select();
            });

            // Add Section Modal GET
            $("#AddSectionModalId").on('click', function () {
                $.ajax({
                    url: "/TableSection/AddSection",
                    type: "GET",
                    success: function (data) {
                        // Check if the response is HTML
                    IsHtmlDoc(data);
                        $("#AddSection-Content").html(data);
                    }
                });
            });

            // Edit Section Modal GET
            $("#EditSectionModal").on('show.bs.modal', function (event) {

                var button = $(event.relatedTarget);
                var sectionid = button.data("id");

                if (sectionid != null) {
                    $.ajax({
                        url: "/TableSection/GetSectionById",
                        type: "GET",
                        data: { sectionid },
                        success: function (data) {
                            // Check if the response is HTML
                    IsHtmlDoc(data);
                            $("#EditSection-Content").html(data);
                        }
                    });
                }
            });

            // Delete Section Modal POST
            $(document).on("submit", "#DeleteSectionForm", function (e) {

                e.preventDefault();

                let sectionid = document.getElementById("DeleteSectionId").value;

                $.ajax({
                    url: "/TableSection/DeleteSection",
                    type: "POST",
                    data: { sectionid: sectionid },
                    success: function (data) {
                        if (data.success) {
                            callSuccessToaster(data.text);
                        } else {
                            callErrorToaster(data.text);
                        }
                        $(".btn-close").click();
                        currentPage_table = 1;
                        loadSectionList();
                        PaginationForTable(data.sectionid, searchText_table, currentPage_table, pageSize_table);
                    }
                });
            });

            // Add Table Modal GET
            $("#AddTableModalId").on('click', function () {

                sectionid = $("#Section_id").val();

                $.ajax({
                    url: "/TableSection/AddTable",
                    type: "GET",
                    data: { sectionid: sectionid },
                    success: function (data) {
                        // Check if the response is HTML
                    IsHtmlDoc(data);
                        $("#AddTable-Content").html(data);
                    }
                });
            });

            // Edit Table Modal GET
            $("#EditTableModal").on('show.bs.modal', function (event) {

                var button = $(event.relatedTarget);
                var tableid = button.data("id");

                sectionid = $("#Section_id").val();

                if (tableid != null) {
                    $.ajax({
                        url: "/TableSection/GetTableById",
                        type: "GET",
                        data: { tableid, sectionid },
                        success: function (data) {
                            // Check if the response is HTML
                    IsHtmlDoc(data);
                            $("#EditTable-Content").html(data);
                        }
                    });
                }
            });

            // Delete Table Modal POST
            $(document).on("submit", "#DeleteTableForm", function (e) {

                e.preventDefault();

                let tableid = document.getElementById("DeleteTableId").value;

                $.ajax({
                    url: "/TableSection/DeleteTable",
                    type: "POST",
                    data: { tableid: tableid },
                    success: function (data, status) {
                        if (data.success) {
                            callSuccessToaster(data.text);
                        } else {
                            callErrorToaster(data.text);
                        }
                        $(".btn-close").click();
                        currentPage_table = 1;
                        PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
                    }
                });
            });

            // Table Mass Delete Modal Yes Button 
            $(document).on("click", "#MassDeleteTableModal_YesButton", function () {

                var sub_checkboxes = document.getElementsByClassName("table-sub-checkbox");

                for (i = 0; i < sub_checkboxes.length; i++) {

                    if (sub_checkboxes[i].checked) {

                        let tableid = sub_checkboxes[i].getAttribute("data-checkid");

                        $.ajax({
                            url: `/TableSection/DeleteTable?tableid=${tableid}`,
                            type: "POST",
                            success: function (data) {

                                if (data.success) {
                                    callSuccessToaster(data.text);
                                }
                                else {
                                    callErrorToaster(data.text);
                                }

                                $("#MassDeleteTablesBtn").prop("disabled", true);

                                currentPage_table = 1;
                                PaginationForTable(sectionid, searchText_table, currentPage_table, pageSize_table);
                            }
                        });
                    }
                }
            });

        });
            // End of Ready Function

    </script>



}